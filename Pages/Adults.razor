@page "/Adult"
@using DnpAssignments.Data
@using DnpAssignments.Models
@inject IAdult AdultService;

<h3>Adult</h3>

@if (adults == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!adults.Any())
{
    <p>
        <em> No Adult items exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>JobTitle</th>
            <th>Salary</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>HairColor</th>
            <th>EyeColor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
            <AuthorizeView Policy="MustBeADMIN"><th>Remove</th></AuthorizeView>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in adults)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.JobTitle.JobTitle</td>
                <td>@item.JobTitle.Salary</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
                <AuthorizeView Policy="MustBeADMIN">
                    <td>
                        <button @onclick="@(() => removeTodoById(@item.Id))">
                            <i class="oi oi-trash" style="color:red"/>
                        </button>
                    </td>
                </AuthorizeView>
                
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Adult> adults;

    protected override async Task OnInitializedAsync()
    {
        adults = AdultService.GetAllAdults();
    }

    public void removeTodoById(int id)
    {
        AdultService.RemoveAdult(id);
    }

}